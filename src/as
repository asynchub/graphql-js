  scalar Date

  enum ITEM_TYPE {
    CONSUMABLE
    PART
    MATERIAL
    EQUIPMENT
  }

  enum PRODUCT_TYPE {
    PUMP
    HATCH
    BUNKER
    CABINET
    SHREDDER
    SERVICE
    SALES_ITEM
    SALES_SET
  }

  enum UNITS {
    METERS
    KG
    PCS
  }
  
  enum POSITION {
    PROJ_MAN
    SALES_MAN
    CEO
    OWNER
  }



  interface Location {
    country: String
    state: String
    city: String
    street: String
    house: String
    room: String
    zip: String
  }
  
  type Address implements Location {
    id: ID!
    Email: String
    Phone: String
  }

  type Destination implements Location {
    id: ID!
    refConsumer: ID
    projects: [Project]
    packLists: [PackList]
  }
  
  
  
  type Face {
    id: ID!
    firstName: String
    lastName: String
    position: POSITION
    company: ID
    Email: String
    Phone: String
  }
  
  
  
  interface Company {
    name: String
    regNr: String
    address: Address
  }
  
  type Customer implements Company {
    id: ID!
    address: ID!
    ? value: Float
    ? profit: Float
    products: [Product]
    projects: [Project]
    invoices: [Invoice]
    purchaseOrders: [PurchaseOrder]
    destinations: [Destination]
  }
  
  type Consumer implements Company {
    id: ID!
    address: ID!
    ? value: Float
    ? profit: Float
    projects: [Project]
    ? destinations: [Destination]
  }

  type Supplier implements Company {
    id: ID!
    address: ID!
    ? value: Float
    ? profit: Float
    stockPosns: [StockPos]
    projects: [Project]
  }

  type Subsupplier implements Company {
    id: ID!
    address: ID!
    ? value: Float
    ? profit: Float
    ? stockPosns: [StockPos]
    projects: [Project]
  }



  interface Document {
    dateIssued: Date
  }
  
  type SalesInvoice implements Traceable, Document {
    id: ID!
    dateDue: Date
    value: Float
  }

  type PurchInvoice implements Traceable, Document {
    id: ID!
    dateDue: Date
    costTotal: Float
    costDelivery: Float
    dateArr: Date
  }

  type Quote implements Traceable, Document {
    id: ID!
    dateValid: Date
    value: Float
    salesItems: [SalesItem]
    salesSets: [SalesSet]
  }

  type PackList implements Traceable, Document {
    id: ID!
    dateSent: Date
    salesItems: [SalesItem]
    salesSets: [SalesSet]
    products: [Product]
    ? data: [{},{}]
  }
  
  type PurchaseOrder implements Document {
    id: ID!
    dateDue: Date
    value: Float
    salesItems: [SalesItem]
    salesSets: [SalesSet]
    products: [Product]
    ? data: [{},{}]
  }



  interface Traceable {
    refProject: ID
    refOrder: ID
    refQuot: ID
    refInv: ID
    refPackL: ID
    refDest: ID
    refCustomer: ID
    refConsumer: ID
    refProduct: ID
  }

  interface Business {
    price: Float
    cost: Float
    profit: Float
  }

  interface Item {
    type: ITEM_TYPE
    name: String
    weight: Int
    qty: Int
    units: UNITS
    dateCompleted: Date
    dateSent: Date
  }
  
  interface Pos {
    type: ITEM_TYPE
    name: String
    weight: Int
    qtyInit: Int
    units: UNITS
    suppliers: [Supplier]
    subSuppliers: [Subsupplier]
    stockItems: [StockItem]
    salesItems: [SalesItem]
    salesSets: [SalesSet]
    products: [Product]
    projects: [Project]
    customers: [Customer]
    consumers: [Consumer]
  }
  
  type CostInfo {
    id: ID!
    costDate: Date
    cost: Float
    isCostExtraOrd: Boolean
  }
  
  type ValueInfo {
    id: ID!
    valueDate: Date
    value: Float
    isValueExtraOrd: Boolean
  }
  
  
  type StockItem implements Traceable, Item {
    id: ID!
    refPurch: ID
    refSalesItem: ID
    refSupplier: ID
    refStock: ID
    refSubsupplier: ID
    refOrigin: ID
    nrCE: String
    nrID: String
    nrSerial: String
    dateArr: Date
    cost: Float
    refStockPos: ID
    isCostExtraOrd: Boolean
    isOnStock: Boolean
  }
  
  type StockPos implements Pos {
    id: ID!
    refStock: ID
    costEstim: Float
    costInfos: [CostInfo]
  }


  type SalesItem implements Traceable, Business, Item {
    id: ID!
    refSet: ID
    stockItems: [StockItem]
    refStockItem: ID
    childrenItems: [SalesItems]
  }
  
  type SalesItemPos implements Pos {
    id: ID!
    valueEstim: Float
    valueInfos: [ValueInfo]
  }


  type SalesSet implements Traceable, Business, Item {
    id: ID!
    salesItems: [SalesItem]
  }
  
  typeSasesSetPos implements Pos {
    id: ID!
    valueEstim: Float
    valueInfos: [ValueInfo]
  }


  type Product implements Traceable, Business, Item {
    id: ID!
    salesSets: [SalesSet]
    salesItems: [SalesItem]
    weight: Int
    length: Int
    height: Int
    width: Int
    productType: PRODUCT_TYPE
  }
  
  type ProductPos implements Pos {
    id: ID!
    valueEstim: Float
    valueInfos: [ValueInfo]
    length: Int
    height: Int
    width: Int
    productType: PRODUCT_TYPE
  }


  type Project implements Traceable, Business {
    id: ID!
    nr: String
    name: String
    refCustomer: ID
    refConsumer: ID
    refDestination: ID
    refProjectMan: ID
    refSalesMan: ID
    value: Float
    cost: Float
    profit: Float
    dateCompleted: Date
    guaranteeMonths: Int
  }
